import javafx.scene.canvas.GraphicsContext;
import javafx.scene.paint.Color;
import javafx.scene.input.KeyCode;
import java.util.ArrayList;

public class Player extends DrawlObject {
    
    private double speedX = 0;
    private double speedY = 0;
    private boolean dead = false;
    private boolean wPressed = false;
    private boolean aPressed = false;
    private boolean sPressed = false;
    private boolean dPressed = false;


public Player(double x, double y)
    {
        super(x, y);
    }

public void update(boolean w, boolean a, boolean s, boolean d) {
        this.wPressed = w;
        this.aPressed = a;
        this.sPressed = s;
        this.dPressed = d;
        double acceleration = 0.1;
        double deceleration = 0.025;
        double maxSpeed = 5;

        if (wPressed) {
            speedY -= acceleration;
        } else {
            speedY += (speedY > 0) ? -deceleration : 0;
        }
        if (sPressed) {
            speedY += acceleration;
        } else {
            speedY += (speedY < 0) ? deceleration : 0;
        }
        if (aPressed) {
            speedX -= acceleration;
        } else {
            speedX += (speedX > 0) ? -deceleration : 0;
        }
        if (dPressed) {
            speedX += acceleration;
        } else {
            speedX += (speedX < 0) ? deceleration : 0;
        }

        if (speedX > -0.025 && speedX < 0.025) {
            speedX = 0;
        }
        if (speedY > -0.025 && speedY < 0.025) {
            speedY = 0;
        }

        speedX = Math.max(Math.min(speedX, maxSpeed), -maxSpeed);
        speedY = Math.max(Math.min(speedY, maxSpeed), -maxSpeed);

        x += speedX;
        y += speedY;
    }

    public void draw(GraphicsContext gc, double camX, double camY) {
        gc.setFill(Color.LIGHTGREEN);
        gc.setStroke(Color.BLACK);
        gc.setLineWidth(2);
        gc.fillOval(x - camX - 17, y - camY - 17, 34, 34);
        gc.strokeOval(x - camX - 17, y - camY - 17, 34, 34);
    }

    public void setX(double newX) {
        x = newX;
    }

    public void setY(double newY) {
        y = newY;
    }

    public void setDead(boolean d) {
        dead = d;
    }

    public boolean isDead() {
        return dead;
    }
    }

}
